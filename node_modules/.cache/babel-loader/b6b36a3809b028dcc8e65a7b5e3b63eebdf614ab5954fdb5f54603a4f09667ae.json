{"ast":null,"code":"import axios from 'axios';\n// const LOGIN_USER_KEY = 'LOGIN_USER_KEY';\n\nvar baseURL;\n// if (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n//     baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {\nbaseURL = 'http://127.0.0.1:8000/';\n// }\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\n// api.interceptors.request.use(\n//     config => {\n//         if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n//             config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n//         }\n\n//         return config;\n//     },\n//     err => {\n//         console.error(err);\n//     }\n// );\n\nexport default class API {\n  constructor() {\n    this.getPosts = async params => {\n      try {\n        const response = await api.get('/posts/', {\n          params\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n    this.addPost = async postBody => {\n      const formData = new FormData();\n      for (const key in postBody) {\n        formData.append(key, postBody[key]);\n      }\n      try {\n        const response = await api.post('/posts/add/', formData);\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n    this.deletePost = async id => {\n      try {\n        return await api.delete(`/posts/delete/${id}/`);\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n    this.getItems = async category => {\n      let url = '/item';\n      if (category) {\n        url += '?category=' + category;\n      }\n      const item = await api.get(url).then(response => {\n        return response.data;\n      })\n      // console.log(respone.data)\n      .catch(error => {\n        throw new Error(error);\n      });\n      return item;\n    };\n    this.getReviews = async item_id => {\n      let url = '/reviews?item_id=' + item_id;\n      const reviews = await api.get(url).then(response => {\n        // console.log('response', response);\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return reviews;\n    };\n    this.writeReview = async (item_id, name, body, like) => {\n      const formData = new FormData();\n      formData.append('item', item_id);\n      formData.append('name', name);\n      formData.append('body', body);\n      formData.append('like_count', like);\n      const savedReview = await api.post('/reviews/add/', formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedReview;\n    };\n  }\n}","map":{"version":3,"names":["axios","baseURL","api","create","headers","API","getPosts","params","response","get","data","error","Error","addPost","postBody","formData","FormData","key","append","post","deletePost","id","delete","getItems","category","url","item","then","catch","getReviews","item_id","reviews","writeReview","name","body","like","savedReview"],"sources":["/Users/mayelinmaria/Downloads/SD-restro-cafe/frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\n// const LOGIN_USER_KEY = 'LOGIN_USER_KEY';\n\nvar baseURL;\n// if (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n//     baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {\nbaseURL = 'http://127.0.0.1:8000/';\n// }\n\nconst api = axios.create({\n    baseURL: baseURL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\n// api.interceptors.request.use(\n//     config => {\n//         if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n//             config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n//         }\n\n//         return config;\n//     },\n//     err => {\n//         console.error(err);\n//     }\n// );\n\nexport default class API {\n    getPosts = async params => {\n        try {\n            const response = await api.get('/posts/', { params });\n            return response.data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n    addPost = async postBody => {\n        const formData = new FormData();\n\n        for (const key in postBody) {\n            formData.append(key, postBody[key]);\n        }\n\n        try {\n            const response = await api.post('/posts/add/', formData);\n            return response.data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n    deletePost = async id => {\n        try {\n            return await api.delete(`/posts/delete/${id}/`);\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n\n    // ////////////////////////////////////\n    // Item\n    // ////////////////////////////////////\n\n    getItems = async category => {\n        let url = '/item';\n        if (category) {\n            url += '?category=' + category;\n        }\n        \n        const item = await api\n            .get(url)\n            .then(response => {\n                return response.data;\n            })\n            // console.log(respone.data)\n            .catch(error => {\n                throw new Error(error);\n            });\n        return item;\n    };\n    ////////////////////////////////\n    // Review\n    ////////////////////////////////\n    getReviews = async item_id => {\n        let url = '/reviews?item_id=' + item_id;\n        const reviews = await api\n            .get(url)\n            .then(response => {\n                // console.log('response', response);\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return reviews;\n    };\n    writeReview = async (item_id, name, body, like) => {\n        const formData = new FormData();\n        formData.append('item', item_id);\n        formData.append('name', name);\n        formData.append('body', body);\n        formData.append('like_count', like);\n        const savedReview = await api\n            .post('/reviews/add/', formData)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedReview;\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}